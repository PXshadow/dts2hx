package ts.html;
extern typedef ParentNode = {
	final childElementCount : Float;
	/**
		Returns the child elements.
	**/
	final children : IHTMLCollection;
	/**
		Returns the first child that is an element, and null otherwise.
	**/
	final firstElementChild : Null<IElement>;
	/**
		Returns the last child that is an element, and null otherwise.
	**/
	final lastElementChild : Null<IElement>;
	/**
		Inserts nodes after the last child of node, while replacing strings in nodes with equivalent Text nodes.
		
		Throws a "HierarchyRequestError" DOMException if the constraints of the node tree are violated.
	**/
	function append(nodes:haxe.extern.Rest<haxe.extern.EitherType<String, INode>>):Void;
	/**
		Inserts nodes before the first child of node, while replacing strings in nodes with equivalent Text nodes.
		
		Throws a "HierarchyRequestError" DOMException if the constraints of the node tree are violated.
	**/
	function prepend(nodes:haxe.extern.Rest<haxe.extern.EitherType<String, INode>>):Void;
	/**
		Returns the first element that is a descendant of node that matches selectors.
	**/
	@:overload(function<K>(selectors:K):Null<haxe.extern.EitherType<ISVGScriptElement, haxe.extern.EitherType<ISVGSymbolElement, haxe.extern.EitherType<ISVGAElement, haxe.extern.EitherType<ISVGStyleElement, haxe.extern.EitherType<ISVGTitleElement, haxe.extern.EitherType<ISVGCircleElement, haxe.extern.EitherType<ISVGClipPathElement, haxe.extern.EitherType<ISVGDefsElement, haxe.extern.EitherType<ISVGDescElement, haxe.extern.EitherType<ISVGEllipseElement, haxe.extern.EitherType<ISVGFEBlendElement, haxe.extern.EitherType<ISVGFEColorMatrixElement, haxe.extern.EitherType<ISVGFEComponentTransferElement, haxe.extern.EitherType<ISVGFECompositeElement, haxe.extern.EitherType<ISVGFEConvolveMatrixElement, haxe.extern.EitherType<ISVGFEDiffuseLightingElement, haxe.extern.EitherType<ISVGFEDisplacementMapElement, haxe.extern.EitherType<ISVGFEDistantLightElement, haxe.extern.EitherType<ISVGFEFloodElement, haxe.extern.EitherType<ISVGFEFuncAElement, haxe.extern.EitherType<ISVGFEFuncBElement, haxe.extern.EitherType<ISVGFEFuncGElement, haxe.extern.EitherType<ISVGFEFuncRElement, haxe.extern.EitherType<ISVGFEGaussianBlurElement, haxe.extern.EitherType<ISVGFEImageElement, haxe.extern.EitherType<ISVGFEMergeElement, haxe.extern.EitherType<ISVGFEMergeNodeElement, haxe.extern.EitherType<ISVGFEMorphologyElement, haxe.extern.EitherType<ISVGFEOffsetElement, haxe.extern.EitherType<ISVGFEPointLightElement, haxe.extern.EitherType<ISVGFESpecularLightingElement, haxe.extern.EitherType<ISVGFESpotLightElement, haxe.extern.EitherType<ISVGFETileElement, haxe.extern.EitherType<ISVGFETurbulenceElement, haxe.extern.EitherType<ISVGFilterElement, haxe.extern.EitherType<ISVGForeignObjectElement, haxe.extern.EitherType<ISVGGElement, haxe.extern.EitherType<ISVGImageElement, haxe.extern.EitherType<ISVGLineElement, haxe.extern.EitherType<ISVGLinearGradientElement, haxe.extern.EitherType<ISVGMarkerElement, haxe.extern.EitherType<ISVGMaskElement, haxe.extern.EitherType<ISVGMetadataElement, haxe.extern.EitherType<ISVGPathElement, haxe.extern.EitherType<ISVGPatternElement, haxe.extern.EitherType<ISVGPolygonElement, haxe.extern.EitherType<ISVGPolylineElement, haxe.extern.EitherType<ISVGRadialGradientElement, haxe.extern.EitherType<ISVGRectElement, haxe.extern.EitherType<ISVGStopElement, haxe.extern.EitherType<ISVGSVGElement, haxe.extern.EitherType<ISVGSwitchElement, haxe.extern.EitherType<ISVGTextElement, haxe.extern.EitherType<ISVGTextPathElement, haxe.extern.EitherType<ISVGTSpanElement, haxe.extern.EitherType<ISVGUseElement, ISVGViewElement>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> { })
	@:overload(function<E>(selectors:String):Null<E> { })
	function querySelector<K>(selectors:K):Null<haxe.extern.EitherType<IHTMLAnchorElement, haxe.extern.EitherType<IHTMLElement, haxe.extern.EitherType<IHTMLAppletElement, haxe.extern.EitherType<IHTMLScriptElement, haxe.extern.EitherType<IHTMLEmbedElement, haxe.extern.EitherType<ts.lib.IHTMLFormElement, haxe.extern.EitherType<IHTMLHeadElement, haxe.extern.EitherType<IHTMLImageElement, haxe.extern.EitherType<IHTMLAreaElement, haxe.extern.EitherType<IHTMLPreElement, haxe.extern.EitherType<IHTMLObjectElement, haxe.extern.EitherType<IHTMLAudioElement, haxe.extern.EitherType<IHTMLBaseElement, haxe.extern.EitherType<IHTMLBaseFontElement, haxe.extern.EitherType<IHTMLQuoteElement, haxe.extern.EitherType<IHTMLBodyElement, haxe.extern.EitherType<IHTMLBRElement, haxe.extern.EitherType<IHTMLButtonElement, haxe.extern.EitherType<IHTMLCanvasElement, haxe.extern.EitherType<IHTMLTableCaptionElement, haxe.extern.EitherType<IHTMLTableColElement, haxe.extern.EitherType<IHTMLDataElement, haxe.extern.EitherType<IHTMLDataListElement, haxe.extern.EitherType<IHTMLModElement, haxe.extern.EitherType<IHTMLDetailsElement, haxe.extern.EitherType<IHTMLDialogElement, haxe.extern.EitherType<IHTMLDirectoryElement, haxe.extern.EitherType<IHTMLDivElement, haxe.extern.EitherType<IHTMLDListElement, haxe.extern.EitherType<IHTMLFieldSetElement, haxe.extern.EitherType<IHTMLFontElement, haxe.extern.EitherType<IHTMLFrameElement, haxe.extern.EitherType<IHTMLFrameSetElement, haxe.extern.EitherType<IHTMLHeadingElement, haxe.extern.EitherType<IHTMLHRElement, haxe.extern.EitherType<IHTMLHtmlElement, haxe.extern.EitherType<IHTMLIFrameElement, haxe.extern.EitherType<IHTMLInputElement, haxe.extern.EitherType<IHTMLLabelElement, haxe.extern.EitherType<IHTMLLegendElement, haxe.extern.EitherType<IHTMLLIElement, haxe.extern.EitherType<IHTMLLinkElement, haxe.extern.EitherType<IHTMLMapElement, haxe.extern.EitherType<IHTMLMarqueeElement, haxe.extern.EitherType<IHTMLMenuElement, haxe.extern.EitherType<IHTMLMetaElement, haxe.extern.EitherType<IHTMLMeterElement, haxe.extern.EitherType<IHTMLOListElement, haxe.extern.EitherType<IHTMLOptGroupElement, haxe.extern.EitherType<IHTMLOptionElement, haxe.extern.EitherType<IHTMLOutputElement, haxe.extern.EitherType<IHTMLParagraphElement, haxe.extern.EitherType<IHTMLParamElement, haxe.extern.EitherType<IHTMLPictureElement, haxe.extern.EitherType<IHTMLProgressElement, haxe.extern.EitherType<ts.lib.IHTMLSelectElement, haxe.extern.EitherType<IHTMLSlotElement, haxe.extern.EitherType<IHTMLSourceElement, haxe.extern.EitherType<IHTMLSpanElement, haxe.extern.EitherType<IHTMLStyleElement, haxe.extern.EitherType<IHTMLTableElement, haxe.extern.EitherType<IHTMLTableSectionElement, haxe.extern.EitherType<IHTMLTableDataCellElement, haxe.extern.EitherType<IHTMLTemplateElement, haxe.extern.EitherType<IHTMLTextAreaElement, haxe.extern.EitherType<IHTMLTableHeaderCellElement, haxe.extern.EitherType<IHTMLTimeElement, haxe.extern.EitherType<IHTMLTitleElement, haxe.extern.EitherType<IHTMLTableRowElement, haxe.extern.EitherType<IHTMLTrackElement, haxe.extern.EitherType<IHTMLUListElement, IHTMLVideoElement>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>;
	/**
		Returns all element descendants of node that match selectors.
	**/
	@:overload(function<K>(selectors:K):ts.lib.NodeListOf<haxe.extern.EitherType<ISVGScriptElement, haxe.extern.EitherType<ISVGSymbolElement, haxe.extern.EitherType<ISVGAElement, haxe.extern.EitherType<ISVGStyleElement, haxe.extern.EitherType<ISVGTitleElement, haxe.extern.EitherType<ISVGCircleElement, haxe.extern.EitherType<ISVGClipPathElement, haxe.extern.EitherType<ISVGDefsElement, haxe.extern.EitherType<ISVGDescElement, haxe.extern.EitherType<ISVGEllipseElement, haxe.extern.EitherType<ISVGFEBlendElement, haxe.extern.EitherType<ISVGFEColorMatrixElement, haxe.extern.EitherType<ISVGFEComponentTransferElement, haxe.extern.EitherType<ISVGFECompositeElement, haxe.extern.EitherType<ISVGFEConvolveMatrixElement, haxe.extern.EitherType<ISVGFEDiffuseLightingElement, haxe.extern.EitherType<ISVGFEDisplacementMapElement, haxe.extern.EitherType<ISVGFEDistantLightElement, haxe.extern.EitherType<ISVGFEFloodElement, haxe.extern.EitherType<ISVGFEFuncAElement, haxe.extern.EitherType<ISVGFEFuncBElement, haxe.extern.EitherType<ISVGFEFuncGElement, haxe.extern.EitherType<ISVGFEFuncRElement, haxe.extern.EitherType<ISVGFEGaussianBlurElement, haxe.extern.EitherType<ISVGFEImageElement, haxe.extern.EitherType<ISVGFEMergeElement, haxe.extern.EitherType<ISVGFEMergeNodeElement, haxe.extern.EitherType<ISVGFEMorphologyElement, haxe.extern.EitherType<ISVGFEOffsetElement, haxe.extern.EitherType<ISVGFEPointLightElement, haxe.extern.EitherType<ISVGFESpecularLightingElement, haxe.extern.EitherType<ISVGFESpotLightElement, haxe.extern.EitherType<ISVGFETileElement, haxe.extern.EitherType<ISVGFETurbulenceElement, haxe.extern.EitherType<ISVGFilterElement, haxe.extern.EitherType<ISVGForeignObjectElement, haxe.extern.EitherType<ISVGGElement, haxe.extern.EitherType<ISVGImageElement, haxe.extern.EitherType<ISVGLineElement, haxe.extern.EitherType<ISVGLinearGradientElement, haxe.extern.EitherType<ISVGMarkerElement, haxe.extern.EitherType<ISVGMaskElement, haxe.extern.EitherType<ISVGMetadataElement, haxe.extern.EitherType<ISVGPathElement, haxe.extern.EitherType<ISVGPatternElement, haxe.extern.EitherType<ISVGPolygonElement, haxe.extern.EitherType<ISVGPolylineElement, haxe.extern.EitherType<ISVGRadialGradientElement, haxe.extern.EitherType<ISVGRectElement, haxe.extern.EitherType<ISVGStopElement, haxe.extern.EitherType<ISVGSVGElement, haxe.extern.EitherType<ISVGSwitchElement, haxe.extern.EitherType<ISVGTextElement, haxe.extern.EitherType<ISVGTextPathElement, haxe.extern.EitherType<ISVGTSpanElement, haxe.extern.EitherType<ISVGUseElement, ISVGViewElement>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> { })
	@:overload(function<E>(selectors:String):ts.lib.NodeListOf<E> { })
	function querySelectorAll<K>(selectors:K):ts.lib.NodeListOf<haxe.extern.EitherType<IHTMLAnchorElement, haxe.extern.EitherType<IHTMLElement, haxe.extern.EitherType<IHTMLAppletElement, haxe.extern.EitherType<IHTMLScriptElement, haxe.extern.EitherType<IHTMLEmbedElement, haxe.extern.EitherType<ts.lib.IHTMLFormElement, haxe.extern.EitherType<IHTMLHeadElement, haxe.extern.EitherType<IHTMLImageElement, haxe.extern.EitherType<IHTMLAreaElement, haxe.extern.EitherType<IHTMLPreElement, haxe.extern.EitherType<IHTMLObjectElement, haxe.extern.EitherType<IHTMLAudioElement, haxe.extern.EitherType<IHTMLBaseElement, haxe.extern.EitherType<IHTMLBaseFontElement, haxe.extern.EitherType<IHTMLQuoteElement, haxe.extern.EitherType<IHTMLBodyElement, haxe.extern.EitherType<IHTMLBRElement, haxe.extern.EitherType<IHTMLButtonElement, haxe.extern.EitherType<IHTMLCanvasElement, haxe.extern.EitherType<IHTMLTableCaptionElement, haxe.extern.EitherType<IHTMLTableColElement, haxe.extern.EitherType<IHTMLDataElement, haxe.extern.EitherType<IHTMLDataListElement, haxe.extern.EitherType<IHTMLModElement, haxe.extern.EitherType<IHTMLDetailsElement, haxe.extern.EitherType<IHTMLDialogElement, haxe.extern.EitherType<IHTMLDirectoryElement, haxe.extern.EitherType<IHTMLDivElement, haxe.extern.EitherType<IHTMLDListElement, haxe.extern.EitherType<IHTMLFieldSetElement, haxe.extern.EitherType<IHTMLFontElement, haxe.extern.EitherType<IHTMLFrameElement, haxe.extern.EitherType<IHTMLFrameSetElement, haxe.extern.EitherType<IHTMLHeadingElement, haxe.extern.EitherType<IHTMLHRElement, haxe.extern.EitherType<IHTMLHtmlElement, haxe.extern.EitherType<IHTMLIFrameElement, haxe.extern.EitherType<IHTMLInputElement, haxe.extern.EitherType<IHTMLLabelElement, haxe.extern.EitherType<IHTMLLegendElement, haxe.extern.EitherType<IHTMLLIElement, haxe.extern.EitherType<IHTMLLinkElement, haxe.extern.EitherType<IHTMLMapElement, haxe.extern.EitherType<IHTMLMarqueeElement, haxe.extern.EitherType<IHTMLMenuElement, haxe.extern.EitherType<IHTMLMetaElement, haxe.extern.EitherType<IHTMLMeterElement, haxe.extern.EitherType<IHTMLOListElement, haxe.extern.EitherType<IHTMLOptGroupElement, haxe.extern.EitherType<IHTMLOptionElement, haxe.extern.EitherType<IHTMLOutputElement, haxe.extern.EitherType<IHTMLParagraphElement, haxe.extern.EitherType<IHTMLParamElement, haxe.extern.EitherType<IHTMLPictureElement, haxe.extern.EitherType<IHTMLProgressElement, haxe.extern.EitherType<ts.lib.IHTMLSelectElement, haxe.extern.EitherType<IHTMLSlotElement, haxe.extern.EitherType<IHTMLSourceElement, haxe.extern.EitherType<IHTMLSpanElement, haxe.extern.EitherType<IHTMLStyleElement, haxe.extern.EitherType<IHTMLTableElement, haxe.extern.EitherType<IHTMLTableSectionElement, haxe.extern.EitherType<IHTMLTableDataCellElement, haxe.extern.EitherType<IHTMLTemplateElement, haxe.extern.EitherType<IHTMLTextAreaElement, haxe.extern.EitherType<IHTMLTableHeaderCellElement, haxe.extern.EitherType<IHTMLTimeElement, haxe.extern.EitherType<IHTMLTitleElement, haxe.extern.EitherType<IHTMLTableRowElement, haxe.extern.EitherType<IHTMLTrackElement, haxe.extern.EitherType<IHTMLUListElement, IHTMLVideoElement>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>;
};