package global;

@:native("THREE") @valueModuleOnly extern class THREE {
	static function warn(?message:Dynamic, optionalParams:haxe.extern.Rest<Dynamic>):Void;
	static function error(?message:Dynamic, optionalParams:haxe.extern.Rest<Dynamic>):Void;
	static function log(?message:Dynamic, optionalParams:haxe.extern.Rest<Dynamic>):Void;
	static var ShaderLib : {
		var basic : global.three.Shader;
		var lambert : global.three.Shader;
		var phong : global.three.Shader;
		var standard : global.three.Shader;
		var matcap : global.three.Shader;
		var points : global.three.Shader;
		var dashed : global.three.Shader;
		var depth : global.three.Shader;
		var normal : global.three.Shader;
		var sprite : global.three.Shader;
		var background : global.three.Shader;
		var cube : global.three.Shader;
		var equirect : global.three.Shader;
		var distanceRGBA : global.three.Shader;
		var shadow : global.three.Shader;
		var physical : global.three.Shader;
	};
	static var UniformsLib : {
		var common : {
			var diffuse : global.three.IUniform;
			var opacity : global.three.IUniform;
			var map : global.three.IUniform;
			var uvTransform : global.three.IUniform;
			var alphaMap : global.three.IUniform;
		};
		var specularmap : {
			var specularMap : global.three.IUniform;
		};
		var envmap : {
			var envMap : global.three.IUniform;
			var flipEnvMap : global.three.IUniform;
			var reflectivity : global.three.IUniform;
			var refractionRatio : global.three.IUniform;
			var maxMipLevel : global.three.IUniform;
		};
		var aomap : {
			var aoMap : global.three.IUniform;
			var aoMapIntensity : global.three.IUniform;
		};
		var lightmap : {
			var lightMap : global.three.IUniform;
			var lightMapIntensity : global.three.IUniform;
		};
		var emissivemap : {
			var emissiveMap : global.three.IUniform;
		};
		var bumpmap : {
			var bumpMap : global.three.IUniform;
			var bumpScale : global.three.IUniform;
		};
		var normalmap : {
			var normalMap : global.three.IUniform;
			var normalScale : global.three.IUniform;
		};
		var displacementmap : {
			var displacementMap : global.three.IUniform;
			var displacementScale : global.three.IUniform;
			var displacementBias : global.three.IUniform;
		};
		var roughnessmap : {
			var roughnessMap : global.three.IUniform;
		};
		var metalnessmap : {
			var metalnessMap : global.three.IUniform;
		};
		var gradientmap : {
			var gradientMap : global.three.IUniform;
		};
		var fog : {
			var fogDensity : global.three.IUniform;
			var fogNear : global.three.IUniform;
			var fogFar : global.three.IUniform;
			var fogColor : global.three.IUniform;
		};
		var lights : {
			var ambientLightColor : global.three.IUniform;
			var directionalLights : {
				var value : Array<Dynamic>;
				var properties : {
					var direction : { };
					var color : { };
					var shadow : { };
					var shadowBias : { };
					var shadowRadius : { };
					var shadowMapSize : { };
				};
			};
			var directionalShadowMap : global.three.IUniform;
			var directionalShadowMatrix : global.three.IUniform;
			var spotLights : {
				var value : Array<Dynamic>;
				var properties : {
					var color : { };
					var position : { };
					var direction : { };
					var distance : { };
					var coneCos : { };
					var penumbraCos : { };
					var decay : { };
					var shadow : { };
					var shadowBias : { };
					var shadowRadius : { };
					var shadowMapSize : { };
				};
			};
			var spotShadowMap : global.three.IUniform;
			var spotShadowMatrix : global.three.IUniform;
			var pointLights : {
				var value : Array<Dynamic>;
				var properties : {
					var color : { };
					var position : { };
					var decay : { };
					var distance : { };
					var shadow : { };
					var shadowBias : { };
					var shadowRadius : { };
					var shadowMapSize : { };
				};
			};
			var pointShadowMap : global.three.IUniform;
			var pointShadowMatrix : global.three.IUniform;
			var hemisphereLights : {
				var value : Array<Dynamic>;
				var properties : {
					var direction : { };
					var skycolor : { };
					var groundColor : { };
				};
			};
			var rectAreaLights : {
				var value : Array<Dynamic>;
				var properties : {
					var color : { };
					var position : { };
					var width : { };
					var height : { };
				};
			};
		};
		var points : {
			var diffuse : global.three.IUniform;
			var opacity : global.three.IUniform;
			var size : global.three.IUniform;
			var scale : global.three.IUniform;
			var map : global.three.IUniform;
			var uvTransform : global.three.IUniform;
		};
	};
	static var ShaderChunk : {
		var alphamap_fragment : String;
		var alphamap_pars_fragment : String;
		var alphatest_fragment : String;
		var aomap_fragment : String;
		var aomap_pars_fragment : String;
		var begin_vertex : String;
		var beginnormal_vertex : String;
		var bsdfs : String;
		var bumpmap_pars_fragment : String;
		var clipping_planes_fragment : String;
		var clipping_planes_pars_fragment : String;
		var clipping_planes_pars_vertex : String;
		var clipping_planes_vertex : String;
		var color_fragment : String;
		var color_pars_fragment : String;
		var color_pars_vertex : String;
		var color_vertex : String;
		var common : String;
		var cube_frag : String;
		var cube_vert : String;
		var cube_uv_reflection_fragment : String;
		var defaultnormal_vertex : String;
		var depth_frag : String;
		var depth_vert : String;
		var distanceRGBA_frag : String;
		var distanceRGBA_vert : String;
		var displacementmap_vertex : String;
		var displacementmap_pars_vertex : String;
		var emissivemap_fragment : String;
		var emissivemap_pars_fragment : String;
		var encodings_pars_fragment : String;
		var encodings_fragment : String;
		var envmap_fragment : String;
		var envmap_pars_fragment : String;
		var envmap_pars_vertex : String;
		var envmap_vertex : String;
		var equirect_frag : String;
		var equirect_vert : String;
		var fog_fragment : String;
		var fog_pars_fragment : String;
		var linedashed_frag : String;
		var linedashed_vert : String;
		var lightmap_fragment : String;
		var lightmap_pars_fragment : String;
		var lights_lambert_vertex : String;
		var lights_pars_begin : String;
		var lights_pars_map : String;
		var lights_phong_fragment : String;
		var lights_phong_pars_fragment : String;
		var lights_physical_fragment : String;
		var lights_physical_pars_fragment : String;
		var lights_fragment_begin : String;
		var lights_fragment_maps : String;
		var lights_fragment_end : String;
		var logdepthbuf_fragment : String;
		var logdepthbuf_pars_fragment : String;
		var logdepthbuf_pars_vertex : String;
		var logdepthbuf_vertex : String;
		var map_fragment : String;
		var map_pars_fragment : String;
		var map_particle_fragment : String;
		var map_particle_pars_fragment : String;
		var meshbasic_frag : String;
		var meshbasic_vert : String;
		var meshlambert_frag : String;
		var meshlambert_vert : String;
		var meshphong_frag : String;
		var meshphong_vert : String;
		var meshphysical_frag : String;
		var meshphysical_vert : String;
		var metalnessmap_fragment : String;
		var metalnessmap_pars_fragment : String;
		var morphnormal_vertex : String;
		var morphtarget_pars_vertex : String;
		var morphtarget_vertex : String;
		var normal_flip : String;
		var normal_frag : String;
		var normal_fragment_begin : String;
		var normal_fragment_maps : String;
		var normal_vert : String;
		var normalmap_pars_fragment : String;
		var packing : String;
		var points_frag : String;
		var points_vert : String;
		var shadow_frag : String;
		var shadow_vert : String;
		var premultiplied_alpha_fragment : String;
		var project_vertex : String;
		var roughnessmap_fragment : String;
		var roughnessmap_pars_fragment : String;
		var shadowmap_pars_fragment : String;
		var shadowmap_pars_vertex : String;
		var shadowmap_vertex : String;
		var shadowmask_pars_fragment : String;
		var skinbase_vertex : String;
		var skinning_pars_vertex : String;
		var skinning_vertex : String;
		var skinnormal_vertex : String;
		var specularmap_fragment : String;
		var specularmap_pars_fragment : String;
		var tonemapping_fragment : String;
		var tonemapping_pars_fragment : String;
		var uv2_pars_fragment : String;
		var uv2_pars_vertex : String;
		var uv2_vertex : String;
		var uv_pars_fragment : String;
		var uv_pars_vertex : String;
		var uv_vertex : String;
		var worldpos_vertex : String;
	};
	static final LineStrip : Float;
	static final LinePieces : Float;
	static var TextureIdCount : Float;
	static var MaterialIdCount : Float;
	static final DefaultLoadingManager : global.three.LoadingManager;
	static final AudioContext : js.html.audio.AudioContext;
	static var GeometryIdCount : Float;
	static var Object3DIdCount : Float;
	static final REVISION : String;
	static final CullFaceNone : global.three.CullFace;
	static final CullFaceBack : global.three.CullFace;
	static final CullFaceFront : global.three.CullFace;
	static final CullFaceFrontBack : global.three.CullFace;
	static final FrontFaceDirectionCW : global.three.FrontFaceDirection;
	static final FrontFaceDirectionCCW : global.three.FrontFaceDirection;
	static final BasicShadowMap : global.three.ShadowMapType;
	static final PCFShadowMap : global.three.ShadowMapType;
	static final PCFSoftShadowMap : global.three.ShadowMapType;
	static final FrontSide : global.three.Side;
	static final BackSide : global.three.Side;
	static final DoubleSide : global.three.Side;
	static final FlatShading : global.three.Shading;
	static final SmoothShading : global.three.Shading;
	static final NoColors : global.three.Colors;
	static final FaceColors : global.three.Colors;
	static final VertexColors : global.three.Colors;
	static final NoBlending : global.three.Blending;
	static final NormalBlending : global.three.Blending;
	static final AdditiveBlending : global.three.Blending;
	static final SubtractiveBlending : global.three.Blending;
	static final MultiplyBlending : global.three.Blending;
	static final CustomBlending : global.three.Blending;
	static final AddEquation : global.three.BlendingEquation;
	static final SubtractEquation : global.three.BlendingEquation;
	static final ReverseSubtractEquation : global.three.BlendingEquation;
	static final MinEquation : global.three.BlendingEquation;
	static final MaxEquation : global.three.BlendingEquation;
	static final ZeroFactor : global.three.BlendingDstFactor;
	static final OneFactor : global.three.BlendingDstFactor;
	static final SrcColorFactor : global.three.BlendingDstFactor;
	static final OneMinusSrcColorFactor : global.three.BlendingDstFactor;
	static final SrcAlphaFactor : global.three.BlendingDstFactor;
	static final OneMinusSrcAlphaFactor : global.three.BlendingDstFactor;
	static final DstAlphaFactor : global.three.BlendingDstFactor;
	static final OneMinusDstAlphaFactor : global.three.BlendingDstFactor;
	static final DstColorFactor : global.three.BlendingDstFactor;
	static final OneMinusDstColorFactor : global.three.BlendingDstFactor;
	static final SrcAlphaSaturateFactor : global.three.BlendingSrcFactor;
	static final NeverDepth : global.three.DepthModes;
	static final AlwaysDepth : global.three.DepthModes;
	static final LessDepth : global.three.DepthModes;
	static final LessEqualDepth : global.three.DepthModes;
	static final EqualDepth : global.three.DepthModes;
	static final GreaterEqualDepth : global.three.DepthModes;
	static final GreaterDepth : global.three.DepthModes;
	static final NotEqualDepth : global.three.DepthModes;
	static final MultiplyOperation : global.three.Combine;
	static final MixOperation : global.three.Combine;
	static final AddOperation : global.three.Combine;
	static final NoToneMapping : global.three.ToneMapping;
	static final LinearToneMapping : global.three.ToneMapping;
	static final ReinhardToneMapping : global.three.ToneMapping;
	static final Uncharted2ToneMapping : global.three.ToneMapping;
	static final CineonToneMapping : global.three.ToneMapping;
	static final UVMapping : global.three.Mapping;
	static final CubeReflectionMapping : global.three.Mapping;
	static final CubeRefractionMapping : global.three.Mapping;
	static final EquirectangularReflectionMapping : global.three.Mapping;
	static final EquirectangularRefractionMapping : global.three.Mapping;
	static final SphericalReflectionMapping : global.three.Mapping;
	static final CubeUVReflectionMapping : global.three.Mapping;
	static final CubeUVRefractionMapping : global.three.Mapping;
	static final RepeatWrapping : global.three.Wrapping;
	static final ClampToEdgeWrapping : global.three.Wrapping;
	static final MirroredRepeatWrapping : global.three.Wrapping;
	static final NearestFilter : global.three.TextureFilter;
	static final NearestMipmapNearestFilter : global.three.TextureFilter;
	static final NearestMipMapNearestFilter : global.three.TextureFilter;
	static final NearestMipmapLinearFilter : global.three.TextureFilter;
	static final NearestMipMapLinearFilter : global.three.TextureFilter;
	static final LinearFilter : global.three.TextureFilter;
	static final LinearMipmapNearestFilter : global.three.TextureFilter;
	static final LinearMipMapNearestFilter : global.three.TextureFilter;
	static final LinearMipmapLinearFilter : global.three.TextureFilter;
	static final LinearMipMapLinearFilter : global.three.TextureFilter;
	static final UnsignedByteType : global.three.TextureDataType;
	static final ByteType : global.three.TextureDataType;
	static final ShortType : global.three.TextureDataType;
	static final UnsignedShortType : global.three.TextureDataType;
	static final IntType : global.three.TextureDataType;
	static final UnsignedIntType : global.three.TextureDataType;
	static final FloatType : global.three.TextureDataType;
	static final HalfFloatType : global.three.TextureDataType;
	static final UnsignedShort4444Type : global.three.PixelType;
	static final UnsignedShort5551Type : global.three.PixelType;
	static final UnsignedShort565Type : global.three.PixelType;
	static final UnsignedInt248Type : global.three.PixelType;
	static final AlphaFormat : global.three.PixelFormat;
	static final RGBFormat : global.three.PixelFormat;
	static final RGBAFormat : global.three.PixelFormat;
	static final LuminanceFormat : global.three.PixelFormat;
	static final LuminanceAlphaFormat : global.three.PixelFormat;
	static final RGBEFormat : global.three.PixelFormat;
	static final DepthFormat : global.three.PixelFormat;
	static final DepthStencilFormat : global.three.PixelFormat;
	static final RedFormat : global.three.PixelFormat;
	static final RGB_S3TC_DXT1_Format : global.three.CompressedPixelFormat;
	static final RGBA_S3TC_DXT1_Format : global.three.CompressedPixelFormat;
	static final RGBA_S3TC_DXT3_Format : global.three.CompressedPixelFormat;
	static final RGBA_S3TC_DXT5_Format : global.three.CompressedPixelFormat;
	static final RGB_PVRTC_4BPPV1_Format : global.three.CompressedPixelFormat;
	static final RGB_PVRTC_2BPPV1_Format : global.three.CompressedPixelFormat;
	static final RGBA_PVRTC_4BPPV1_Format : global.three.CompressedPixelFormat;
	static final RGBA_PVRTC_2BPPV1_Format : global.three.CompressedPixelFormat;
	static final RGB_ETC1_Format : global.three.CompressedPixelFormat;
	static final RGBA_ASTC_4x4_Format : global.three.CompressedPixelFormat;
	static final RGBA_ASTC_5x4_Format : global.three.CompressedPixelFormat;
	static final RGBA_ASTC_5x5_Format : global.three.CompressedPixelFormat;
	static final RGBA_ASTC_6x5_Format : global.three.CompressedPixelFormat;
	static final RGBA_ASTC_6x6_Format : global.three.CompressedPixelFormat;
	static final RGBA_ASTC_8x5_Format : global.three.CompressedPixelFormat;
	static final RGBA_ASTC_8x6_Format : global.three.CompressedPixelFormat;
	static final RGBA_ASTC_8x8_Format : global.three.CompressedPixelFormat;
	static final RGBA_ASTC_10x5_Format : global.three.CompressedPixelFormat;
	static final RGBA_ASTC_10x6_Format : global.three.CompressedPixelFormat;
	static final RGBA_ASTC_10x8_Format : global.three.CompressedPixelFormat;
	static final RGBA_ASTC_10x10_Format : global.three.CompressedPixelFormat;
	static final RGBA_ASTC_12x10_Format : global.three.CompressedPixelFormat;
	static final RGBA_ASTC_12x12_Format : global.three.CompressedPixelFormat;
	static final LoopOnce : global.three.AnimationActionLoopStyles;
	static final LoopRepeat : global.three.AnimationActionLoopStyles;
	static final LoopPingPong : global.three.AnimationActionLoopStyles;
	static final InterpolateDiscrete : global.three.InterpolationModes;
	static final InterpolateLinear : global.three.InterpolationModes;
	static final InterpolateSmooth : global.three.InterpolationModes;
	static final ZeroCurvatureEnding : global.three.InterpolationEndingModes;
	static final ZeroSlopeEnding : global.three.InterpolationEndingModes;
	static final WrapAroundEnding : global.three.InterpolationEndingModes;
	static final TrianglesDrawMode : global.three.TrianglesDrawModes;
	static final TriangleStripDrawMode : global.three.TrianglesDrawModes;
	static final TriangleFanDrawMode : global.three.TrianglesDrawModes;
	static final LinearEncoding : global.three.TextureEncoding;
	static final sRGBEncoding : global.three.TextureEncoding;
	static final GammaEncoding : global.three.TextureEncoding;
	static final RGBEEncoding : global.three.TextureEncoding;
	static final LogLuvEncoding : global.three.TextureEncoding;
	static final RGBM7Encoding : global.three.TextureEncoding;
	static final RGBM16Encoding : global.three.TextureEncoding;
	static final RGBDEncoding : global.three.TextureEncoding;
	static final BasicDepthPacking : global.three.DepthPackingStrategies;
	static final RGBADepthPacking : global.three.DepthPackingStrategies;
	static final TangentSpaceNormalMap : global.three.NormalMapTypes;
	static final ObjectSpaceNormalMap : global.three.NormalMapTypes;
	static final ZeroStencilOp : global.three.StencilOp;
	static final KeepStencilOp : global.three.StencilOp;
	static final ReplaceStencilOp : global.three.StencilOp;
	static final IncrementStencilOp : global.three.StencilOp;
	static final DecrementStencilOp : global.three.StencilOp;
	static final IncrementWrapStencilOp : global.three.StencilOp;
	static final DecrementWrapStencilOp : global.three.StencilOp;
	static final InvertStencilOp : global.three.StencilOp;
	static final NeverStencilFunc : global.three.StencilFunc;
	static final LessStencilFunc : global.three.StencilFunc;
	static final EqualStencilFunc : global.three.StencilFunc;
	static final LessEqualStencilFunc : global.three.StencilFunc;
	static final GreaterStencilFunc : global.three.StencilFunc;
	static final NotEqualStencilFunc : global.three.StencilFunc;
	static final GreaterEqualStencilFunc : global.three.StencilFunc;
	static final AlwaysStencilFunc : global.three.StencilFunc;
}