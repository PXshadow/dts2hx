package js.html;
extern interface DocumentEvent {
	@:overload(function(eventInterface:String):AnimationPlaybackEvent { })
	@:overload(function(eventInterface:String):AudioProcessingEvent { })
	@:overload(function(eventInterface:String):BeforeUnloadEvent { })
	@:overload(function(eventInterface:String):ClipboardEvent { })
	@:overload(function(eventInterface:String):CloseEvent { })
	@:overload(function(eventInterface:String):CompositionEvent { })
	@:overload(function(eventInterface:String):CustomEvent<Any> { })
	@:overload(function(eventInterface:String):DeviceLightEvent { })
	@:overload(function(eventInterface:String):DeviceMotionEvent { })
	@:overload(function(eventInterface:String):DeviceOrientationEvent { })
	@:overload(function(eventInterface:String):DragEvent { })
	@:overload(function(eventInterface:String):ErrorEvent { })
	@:overload(function(eventInterface:String):Event { })
	@:overload(function(eventInterface:String):Event { })
	@:overload(function(eventInterface:String):FocusEvent { })
	@:overload(function(eventInterface:String):FocusNavigationEvent { })
	@:overload(function(eventInterface:String):GamepadEvent { })
	@:overload(function(eventInterface:String):HashChangeEvent { })
	@:overload(function(eventInterface:String):IDBVersionChangeEvent { })
	@:overload(function(eventInterface:String):InputEvent { })
	@:overload(function(eventInterface:String):KeyboardEvent { })
	@:overload(function(eventInterface:String):ListeningStateChangedEvent { })
	@:overload(function(eventInterface:String):MSGestureEvent { })
	@:overload(function(eventInterface:String):MSMediaKeyMessageEvent { })
	@:overload(function(eventInterface:String):MSMediaKeyNeededEvent { })
	@:overload(function(eventInterface:String):MSPointerEvent { })
	@:overload(function(eventInterface:String):MediaEncryptedEvent { })
	@:overload(function(eventInterface:String):MediaKeyMessageEvent { })
	@:overload(function(eventInterface:String):MediaQueryListEvent { })
	@:overload(function(eventInterface:String):MediaStreamErrorEvent { })
	@:overload(function(eventInterface:String):MediaStreamEvent { })
	@:overload(function(eventInterface:String):MediaStreamTrackEvent { })
	@:overload(function(eventInterface:String):MessageEvent { })
	@:overload(function(eventInterface:String):MouseEvent { })
	@:overload(function(eventInterface:String):MouseEvent { })
	@:overload(function(eventInterface:String):MutationEvent { })
	@:overload(function(eventInterface:String):MutationEvent { })
	@:overload(function(eventInterface:String):OfflineAudioCompletionEvent { })
	@:overload(function(eventInterface:String):OverflowEvent { })
	@:overload(function(eventInterface:String):PageTransitionEvent { })
	@:overload(function(eventInterface:String):PaymentRequestUpdateEvent { })
	@:overload(function(eventInterface:String):PermissionRequestedEvent { })
	@:overload(function(eventInterface:String):PointerEvent { })
	@:overload(function(eventInterface:String):PopStateEvent { })
	@:overload(function(eventInterface:String):ProgressEvent<EventTarget> { })
	@:overload(function(eventInterface:String):PromiseRejectionEvent { })
	@:overload(function(eventInterface:String):RTCDTMFToneChangeEvent { })
	@:overload(function(eventInterface:String):RTCDataChannelEvent { })
	@:overload(function(eventInterface:String):RTCDtlsTransportStateChangedEvent { })
	@:overload(function(eventInterface:String):RTCErrorEvent { })
	@:overload(function(eventInterface:String):RTCIceCandidatePairChangedEvent { })
	@:overload(function(eventInterface:String):RTCIceGathererEvent { })
	@:overload(function(eventInterface:String):RTCIceTransportStateChangedEvent { })
	@:overload(function(eventInterface:String):RTCPeerConnectionIceErrorEvent { })
	@:overload(function(eventInterface:String):RTCPeerConnectionIceEvent { })
	@:overload(function(eventInterface:String):RTCSsrcConflictEvent { })
	@:overload(function(eventInterface:String):RTCStatsEvent { })
	@:overload(function(eventInterface:String):RTCTrackEvent { })
	@:overload(function(eventInterface:String):SVGZoomEvent { })
	@:overload(function(eventInterface:String):SVGZoomEvent { })
	@:overload(function(eventInterface:String):SecurityPolicyViolationEvent { })
	@:overload(function(eventInterface:String):ServiceWorkerMessageEvent { })
	@:overload(function(eventInterface:String):SpeechRecognitionError { })
	@:overload(function(eventInterface:String):SpeechRecognitionEvent { })
	@:overload(function(eventInterface:String):SpeechSynthesisErrorEvent { })
	@:overload(function(eventInterface:String):SpeechSynthesisEvent { })
	@:overload(function(eventInterface:String):StorageEvent { })
	@:overload(function(eventInterface:String):TextEvent { })
	@:overload(function(eventInterface:String):TouchEvent { })
	@:overload(function(eventInterface:String):TrackEvent { })
	@:overload(function(eventInterface:String):TransitionEvent { })
	@:overload(function(eventInterface:String):UIEvent { })
	@:overload(function(eventInterface:String):UIEvent { })
	@:overload(function(eventInterface:String):VRDisplayEvent { })
	@:overload(function(eventInterface:String):VRDisplayEvent { })
	@:overload(function(eventInterface:String):WebGLContextEvent { })
	@:overload(function(eventInterface:String):WheelEvent { })
	@:overload(function(eventInterface:String):Event { })
	function createEvent(eventInterface:String):AnimationEvent;
}